#!/bin/bash
. ../util.sh --source-only

shpath=$PWD
cd $(dirname $0)
path=${1:-../src}
cd $path

tfile=`basename $0`
n_file=`ls -1 $tfile*.c 2> /dev/null | wc -l`

if [ $n_file = 0 ]; then
  echo "There is no file starting with $tfile"
  exit 1
fi

# rm only exec files
efile=`ls $tfile* | grep -Ev "*.c"`
n_efile=`ls -1 $tfile* 2>/dev/null | grep -Ev "*.c" | wc -l`
if [ $n_efile -gt 0 ]; then
  echo "-- removed --------------"
  echo $efile
  echo "-------------------------"
  rm $efile
fi

echo -e "\n=============================" \
        "\n* Solve simultaneous linear equations\n" \
        "\n   a_00*x_0 + a_01*x_1 = b_0" \
        "\n   a_10*x_0 + a_11*x_1 = b_1 \n" \
        "\n* Assume rank is 2. \n" \
        "\n* Have to make type double." \
        "\n============================="

echo -e "\n==========Test case==========" \
        "\na_00, a_01, a_10, a_11, b_0, b_1" \
        "\n1 2 3 4 5 6" \
        "\n1 1 1 -1 10 4" \
        "\n1.5 1 6 -1 5 4" \
        "\n============================="

fail=()
for cfile in $tfile*.c
do
  filename=`basename $cfile .c`
  printf "\n%s\n" "$pad"
  echo "$filename"
  printf "%s\n" "$line"
  gcc "$PWD/$cfile" -o "$PWD/$filename" 2>> $shpath/err.log
  if [ $? -ne 0 ]; then
    fail+=( $cfile )
    echo -e "Compile failed." \
            "\n============================="
    continue
  fi
  echo -e "1\n2\n3\n4\n5\n6\n" | $PWD/$filename
  echo -e "expected -4 4.5\n"
  echo -e "1\n1\n1\n-1\n10\n4\n" | $PWD/$filename
  echo -e "expected 7 3\n"
  echo -e "1.5\n1\n6\n-1\n5\n4\n" | $PWD/$filename
  echo -e "expected about 1.2 3.2"
  printf "%s\n" "$pad"
done

n_efile=`ls $tfile* | grep -Ev "*.c" | wc -l`
echo -e "\n========Compile Check========" \
        "\nSrc File      : $n_file" \
        "\nExecute File  : $n_efile" \
        "\nCompile Error : $(($n_file-$n_efile))" \
        "\n============================="

print_files fail[@] "Failed files"

