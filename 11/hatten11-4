#!/bin/sh
. ../util.sh --source-only

shpath=$PWD
cd $(dirname $0)
path=${1:-../src}
cd $path

tfile=`basename $0`
n_file=`ls -1 $tfile*.c 2> /dev/null | wc -l`

if [ $n_file = 0 ]; then
  echo "There is no file starting with $tfile"
  exit 1
fi

# rm only exec files
efile=`ls $tfile* | grep -Ev "*.c"`
n_efile=`ls -1 $tfile* 2>/dev/null | grep -Ev "*.c" | wc -l`
if [ $n_efile -gt 0 ]; then
  echo "-- removed --------------"
  echo $efile
  echo "-------------------------"
  rm $efile
fi

echo -e "\n=============================" \
        "\n* Write 9*9 list to file.\n" \
        "\n* Layout should be aligned." \
        "\n============================="

echo -e "\n==========Test case==========" \
        "\n ."\
        "\n============================="

# make data file which program reads
echo -e "\n=== Read file is ========="\
        "\n 1 鉛筆 80"\
        "\n 2 定規 200"\
        "\n 3 けしごむ 30"\
        "\n 4 電卓 1000"
echo -e "=========================="

fail=()
for cfile in $tfile*.c
do
  filename=`basename $cfile .c`
  printf "\n\n%s\n" "$pad"
  echo "$filename"
  printf "%s\n" "$line"
  gcc "$PWD/$cfile" -o "$PWD/$filename" 2>> $shpath/err.log
  if [ $? -ne 0 ]; then
    fail+=( $cfile )
    echo -e "Compile filed." \
            "\n============================="
    continue
  fi
  readfile=`extract_filename "$PWD/$cfile" "r"`
  echo -e "Read file is ${readfile}"
  echo -e "1 鉛筆 80"\
          "\n2 定規 200"\
          "\n3 けしごむ 30"\
          "\n4 電卓 1000" > $PWD/${readfile}
  echo ""
  echo -e "2\n3\n" | $PWD/$filename
  echo -e "\n Expected: 600\n"
  echo -e "1\n1\n" | $PWD/$filename
  echo -e "\n Expected: 80\n"
  echo -e "4\n9\n" | $PWD/$filename
  echo -e "\n Expected: 9000\n"
  echo -e "1\n0\n" | $PWD/$filename
  echo -e "\n Expected: 0\n"
  echo -e "5\n3\n3\n" | $PWD/$filename
  echo -e "\n Expected: (Invalid item number: 5) 90\n"
  echo -e "0\n3\n10\n" | $PWD/$filename
  echo -e "\n Expected: (Invalid item number: 0) 300\n"
  echo -e "1\n-1\n1\n" | $PWD/$filename
  echo -e "\n Expected: (Invalid #items: -1 (-80) ) 80\n"
  printf "%s\n" "$pad"
  rm "$PWD/$readfile"
done

# NULL check
null_check $tfile

n_efile=`ls $tfile* | grep -Ev "*.c" | wc -l`
echo -e "\n========Compile check========" \
        "\nSrc File      : $n_file" \
        "\nExecute File  : $n_efile" \
        "\nCompile Error : $(($n_file-$n_efile))" \
        "\n============================="

print_files fail[@] "Failed files"

