#!/bin/sh

cd $(dirname $0)
path=${1:-../src}
cd $path

tfile=`basename $0`
n_file=`ls -1 $tfile*.c 2> /dev/null | wc -l`

if [ $n_file = 0 ]; then
  echo "There is no file starting with $tfile"
  exit 1
fi

# rm only exec files
efile=`ls $tfile* | grep -Ev "*.c"`
n_efile=`ls -1 $tfile* 2>/dev/null | grep -Ev "*.c" | wc -l`
if [ $n_efile -gt 0 ]; then
  echo "-- removed --------------"
  echo $efile
  echo "-------------------------"
  rm $efile
fi

echo -e "\n=============================" \
        "\n* Implement a func that searches a value from given array.\n" \
        "\n  int search(int *array, int size, int value){ ... }\n" \
        "\n* If there is a value in array, then return index of the array." \
        "\n  If there are the same value in multiple places," \
        "\n  then return one of index of array wherever is fine.\n" \
        "\n* If there isn't the value in array, then return -1" \
        "\n============================="

echo -e "\n==========Test case==========" \
        "\n 10 20 30 40 50 30" \
        "\n 90 -1 10 0 30 -90" \
        "\n 90 -1 90 0 30 90" \
        "\n 90 90 90 90 90 90" \
        "\n============================="

for cfile in $tfile*.c
do
  filename=`basename $cfile .c`
  echo -e "\n============================="
  echo "$filename"
  echo "----------------------------"
  gcc "$PWD/$cfile" -o "$PWD/$filename"
  echo "10 20 30 40 50 30" | $PWD/$filename
  echo -e " expected: 2\n"
  echo "90 -1 10 0 30 -90" | $PWD/$filename
  echo -e " expected: -1 or no exist\n"
  echo "90 -1 90 0 30 90" | $PWD/$filename
  echo -e " expected: 0 or 2\n"
  echo "90 90 90 90 90 90" | $PWD/$filename
  echo -e " expected: 0 ~ 4\n"
  echo -e "============================="
done

n_efile=`ls $tfile* | grep -Ev "*.c" | wc -l`

echo -e "\n========compile check========" \
        "\nSrc File      : $n_file" \
        "\nExecute File  : $n_efile" \
        "\nCompile Error : $(($n_file-$n_efile))" \
        "\n============================="
