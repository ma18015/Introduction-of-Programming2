#!/bin/bash
. ../util.sh --source-only

shpath=$PWD
cd $(dirname $0)
path=${1:-../src}
cd $path

tfile=`basename $0`
n_file=`ls -1 $tfile*.c 2> /dev/null | wc -l`

if [ $n_file = 0 ]; then
  echo "There is no file starting with $tfile"
  exit 1
fi

# rm only exec files
efile=`ls $tfile* | grep -Ev "*.c"`
n_efile=`ls -1 $tfile* 2>/dev/null | grep -Ev "*.c" | wc -l`
if [ $n_efile -gt 0 ]; then
  echo "-- removed --------------"
  echo $efile
  echo "-------------------------"
  rm $efile
fi

echo -e "\n=============================" \
        "\n* Print list of exam candidates name, each subject score and total score.\n" \
        "\n* Have to use calloc.\n" \
        "\n* Input is supposed to be" \
        "\n  # of people you enter: 2" \
        "\n  Name    : Taro" \
        "\n  Math    : 90" \
        "\n  English : 100" \
        "\n  Name    : Jiro" \
        "\n  Math    : 0" \
        "\n  English : 50\n" \
        "\n* List is like" \
        "\n  Name   Math    English   Total" \
        "\n  Taro     90        100     190" \
        "\n  Jiro      0         50      50" \
        "\n============================="

echo -e "\n==========Test case=========="\
        "\n 2"\
        "\n Taro 90 100"\
        "\n Jiro 0 50"\
        "\n ------------------------"\
        "\n 10"\
        "\n Taro 90 100 "\
        "\n Jiro 0 50"\
        "\n Taro 90 100 "\
        "\n Taro 90 100 "\
        "\n Taro 90 100 "\
        "\n Taro 90 100 "\
        "\n Taro 90 100 "\
        "\n Taro 90 100 "\
        "\n Taro 90 100 "\
        "\n Taro 90 100 "\
        "\n Taro 90 100 "\
        "\n Taro 90 100"\
        "\n ------------------------"\
        "\n 2"\
        "\n Taro -90 100"\
        "\n Jiro 0 -50"\
        "\n============================="

fail=()
for cfile in $tfile*.c
do
  filename=`basename $cfile .c`
  printf "\n%s\n" "$pad"
  echo "$filename"
  printf "%s\n" "$line"
  gcc "$PWD/$cfile" -o "$PWD/$filename" 2>> $shpath/err.log
  if [ $? -ne 0 ]; then
    # fail("${fail[@]}" $cfile)
    fail+=( $cfile )
    echo -e "Compile filed." \
            "\n============================="
    continue
  fi
  echo -e "2\n"\
          "Taro\n90\n100\n"\
          "Jiro\n0\n50\n" | $PWD/$filename
  echo -e " expected: " \
          "\n  Name   Math    English   Total" \
          "\n  Taro     90        100     190" \
          "\n  Jiro      0         50      50\n"
  echo -e "10\n"\
          "Taro\n90\n100\n"\
          "Jiro\n0\n50\n"\
          "Taro\n90\n100\n"\
          "Taro\n90\n100\n"\
          "Taro\n90\n100\n"\
          "Taro\n90\n100\n"\
          "Taro\n90\n100\n"\
          "Taro\n90\n100\n"\
          "Taro\n90\n100\n"\
          "Taro\n90\n100\n"\
          "Taro\n90\n100\n"\
          "Taro\n90\n100\n" | $PWD/$filename
  echo -e " expected: " \
          "\n  Name   Math    English   Total" \
          "\n  Taro     90        100     190" \
          "\n  Jiro      0         50      50" \
          "\n  Taro     90        100     190" \
          "\n  Taro     90        100     190" \
          "\n  Taro     90        100     190" \
          "\n  Taro     90        100     190" \
          "\n  Taro     90        100     190" \
          "\n  Taro     90        100     190" \
          "\n  Taro     90        100     190" \
          "\n  Taro     90        100     190\n"
  echo -e "2\n"\
          "Taro\n-90\n100\n"\
          "Jiro\n0\n-50\n" | $PWD/$filename
  echo -e " expected: " \
          "\n  Name   Math    English   Total" \
          "\n  Taro    -90        100      10" \
          "\n  Jiro      0        -50     -50"
  printf "%s\n" "$pad"
done

if [ ${#fail[@]} -gt 0 ]; then
  echo -e "\n\n========Failed files========="
  for failfile in ${fail[@]}; do
    echo ${failfile}
  done
  echo "============================="
fi

n_efile=`ls $tfile* | grep -Ev "*.c" | wc -l`
echo -e "\n========compile check========" \
        "\nSrc File      : $n_file" \
        "\nExecute File  : $n_efile" \
        "\nCompile Error : $(($n_file-$n_efile))" \
        "\n============================="

print_files fail[@] "Failed files"

