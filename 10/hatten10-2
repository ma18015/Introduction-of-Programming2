#!/bin/sh

shpath=$PWD
cd $(dirname $0)
path=${1:-../src}
cd $path

tfile=`basename $0`
n_file=`ls -1 $tfile*.c 2> /dev/null | wc -l`

if [ $n_file = 0 ]; then
  echo "There is no file starting with $tfile"
  exit 1
fi

# rm only exec files
efile=`ls $tfile* | grep -Ev "*.c"`
n_efile=`ls -1 $tfile* 2>/dev/null | grep -Ev "*.c" | wc -l`
if [ $n_efile -gt 0 ]; then
  echo "-- removed --------------"
  echo $efile
  echo "-------------------------"
  rm $efile
fi

echo -e "\n=============================" \
        "\n* Print hatten10-1 list in descending order of total score." \
        "\n============================="

echo -e "\n==========Test case==========" \
        "\n 2 Taro 90 100 Jiro 0 50" \
        "\n 10 Taro 90 100 Jiro 0 50 Taro 90 100 Taro 90 100 Taro 90 100 Taro 90 100 Taro 90 100 Taro 90 100 Taro 90 100 Taro 90 100" \
        "\n 2 Taro 90 100" \
        "\n 2 Taro 90 100 Jiro 0 50" \
        "\n 3 Ta 91 102 Miro 0 50 Ja 19 100" \
        "\n============================="

fail=()
for cfile in $tfile*.c
do
  filename=`basename $cfile .c`
  echo -e "\n============================="
  echo "$filename"
  echo "----------------------------"
  gcc "$PWD/$cfile" -o "$PWD/$filename" 2>> $shpath/err.log
  if [ $? -ne 0 ]; then
    # fail("${fail[@]}" $cfile)
    fail+=( $cfile )
    echo -e "Compile filed." \
            "\n============================="
    continue
  fi
  echo 2 Taro 90 100 Jiro 0 50 | $PWD/$filename
  echo -e " expected: " \
          "\n  Name   Math    English   Total" \
          "\n  Taro     90        100     190" \
          "\n  Jiro      0         50      50"
  echo 10 Taro 90 100 Jiro 0 50 Taro 90 100 Taro 90 101 Taro 90 100 Taro 90 100 Taro 90 100 Taro 90 100 Taro 90 100 Taro 90 100 Taro 90 100 Taro 90 100 | $PWD/$filename
  echo -e " expected: " \
          "\n  Name   Math    English   Total" \
          "\n  Taro     90        101     191" \
          "\n  Taro     90        100     190" \
          "\n  Taro     90        100     190" \
          "\n  Taro     90        100     190" \
          "\n  Taro     90        100     190" \
          "\n  Taro     90        100     190" \
          "\n  Taro     90        100     190" \
          "\n  Taro     90        100     190" \
          "\n  Taro     90        100     190" \
          "\n  Jiro      0         50      50"
  echo 2 Taro -90 100 Jiro 0 -50 | $PWD/$filename
  echo -e " expected: " \
          "\n  Name   Math    English   Total" \
          "\n  Taro    -90        100      10" \
          "\n  Jiro      0        -50     -50"
  echo 3 Ja 19 100 Miro 0 50 Ta 91 102 | $PWD/$filename
  echo -e " expected: " \
          "\n  Name   Math    English   Total" \
          "\n  Ta       91        102     193" \
          "\n  Ja       19        100     119" \
          "\n  Miro      0         50      50"
  echo -e "============================="
done

if [ ${#fail[@]} -gt 0 ]; then
  echo -e "\n\n========Failed files========="
  for failfile in ${fail[@]}; do
    echo ${failfile}
  done
  echo "============================="
fi

n_efile=`ls $tfile* | grep -Ev "*.c" | wc -l`
echo -e "\n========compile check========" \
        "\nSrc File      : $n_file" \
        "\nExecute File  : $n_efile" \
        "\nCompile Error : $(($n_file-$n_efile))" \
        "\n============================="

