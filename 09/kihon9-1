#!/bin/bash
. ../util.sh --source-only

shpath=$PWD
cd $(dirname $0)
path=${1:-../src}
cd $path

tfile=`basename $0`
n_file=`ls -1 $tfile*.c 2> /dev/null | wc -l`

if [ $n_file = 0 ]; then
  echo "There is no file starting with $tfile"
  exit 1
fi

# rm only exec files
efile=`ls $tfile* | grep -Ev "*.c"`
n_efile=`ls -1 $tfile* 2>/dev/null | grep -Ev "*.c" | wc -l`
if [ $n_efile -gt 0 ]; then
  echo "-- removed --------------"
  echo $efile
  echo "-------------------------"
  rm $efile
fi

echo -e "\n=============================" \
        "\n* Print 1 student info which entered student id using structure.\n" \
        "\n* Inputs are supposed to be\n" \
        "\n    int  Student ID" \
        "\n    char Student name " \
        "\n    int  English score\n" \
        "\n  Student name includes no spaces.\n"\
        "\n* Structure is supposed to be\n" \
        "\n    struct{" \
        "\n       int id;" \
        "\n       char name[20];" \
        "\n       int english;" \
        "\n    }\n" \
        "\n============================="

echo -e "\n==========Test case==========" \
        "\n 10001 Taro 90"\
        "\n 10002 Jiro 70"\
        "\n 10003 Saburo 60"\
        "\n 10002"\
        "\n ----------------------"\
        "\n 10 Ao 90"\
        "\n 20 Shiro 70"\
        "\n 30 Kiiro 60"\
        "\n 20"\
        "\n ----------------------"\
        "\n 10 Taro 90"\
        "\n 70 Jiro 70"\
        "\n 30 Saburo 60"\
        "\n 100"\
        "\n ----------------------"\
        "\n 10001 Taro 900"\
        "\n 10002 Jiro 7000"\
        "\n 10003 Saburo 360"\
        "\n 10003"\
        "\n============================="

fail=()
for cfile in $tfile*.c
do
  filename=`basename $cfile .c`
  printf "\n%s\n" "$pad"
  echo "$filename"
  printf "%s\n" "$line"
  gcc "$PWD/$cfile" -o "$PWD/$filename" 2>> $shpath/err.log
  if [ $? -ne 0 ]; then
    fail+=( $cfile )
    echo -e "Compile filed." \
            "\n============================="
    continue
  fi
  echo -e "10001\nTaro\n90\n"\
          "10002\nJiro\n70\n"\
          "10003\nSaburo\n60\n10002\n" | $PWD/$filename
  echo -e " expected: StudentID 10002, Name Jiro, English 70.\n"
  echo -e "10\nAo\n90\n"\
          "20\nShiro\n70\n"\
          "30\nKiiro\n60\n20\n" | $PWD/$filename
  echo -e " expected: StudentID 20, Name Shiro, English 70.\n"
  echo -e "10\nTaro\n90\n"\
          "70\nJiro\n70\n"\
          "30\nSaburo\n60\n100\n" | $PWD/$filename
  echo -e " expected: invalid student id.\n"
  echo -e "10001\nTaro\n900\n"\
          "10002\nJiro\n7000\n"\
          "10003\nSaburo\n360\n10003\n" | $PWD/$filename
  echo -e " expected: StudentID 10003, Name Saburo, English 360.\n"
  printf "%s\n" "$pad"
done

n_efile=`ls $tfile* | grep -Ev "*.c" | wc -l`
echo -e "\n========Compile check========" \
        "\nSrc File      : $n_efile" \
        "\nExecute File  : $n_file" \
        "\nCompile Error : $(($n_file-$n_efile))" \
        "\n============================="

print_files fail[@] "Failed files"

